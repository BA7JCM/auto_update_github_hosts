压缩包是我的测试文件和文件夹（造假测试条件相当烦人），脚本在内网dev虚拟机上可以直接bash xxx.sh来运行
海南服务器那种生产机器上需要 Linux 进程替换的方式实现否则无法绕过系统禁止运行脚本的限制：bash <(cat xxx.sh)

详细配置可以查看脚本自带帮助菜单（具体写法见第一二行，命令：bash xxx.sh -h 或 bash xxx.sh --help）

脚本应梅杰组长要求设计尽量稳定，操作尽量简单，但架不住每次提的要求都得对脚本结构进行大改，每台服务器每种功能都得写一个专用脚本
所以为了统一，初版功能相当灵活，有30个有参或无参选项任意次序组合（做了非常多限制所以做成了五大类6种功能，否则总组合数量超过三千种），
内部除了脚本文件名和清理过期日志的规定天数是魔法值外，包括调用这些魔法值的所有功能均为动态获取或外部传参实现
结构设计之初就是为了安夏目前任何服务器集群均能使用的目的去做的
同步和备份功能均做成了基本单元，任何复杂功能（单机多盘，多机多盘）均可以通过堆积木的方式实现，

大体功能：
1. 为防止部署时出现意外情况，检测和执行是完全分开的，不通过确认选项无法启动执行操作
2. 堆积木举例：双机先同步再交叉备份：脚本执行三次一键部署，第一次同步部署，第二三次交叉备份部署
3. 脚本一切传输基于scp（有非常多设备没有rsync或syncthing甚至没有sftp，所以考虑通用性用的scp），一切检测查询使用ssh实现，基于定制免密环境
4. 部署后的自动执行基于部署时指定的系统定时方案，启动后全部功能的主流程有：
	脚本运行环境检测（怕驻场运维少装必要依赖导致脚本工作异常）
	免密环境完整性检测和自动修复（怕维护人员手滑破坏）
	多种传参组合及每个选项合法性检测（怕梅杰传参手滑）
	免密节点组检测和指定错误后的可用列表提醒（怕梅杰部署错免密组）
	同组节点检测和出错后的可用列表提醒（怕梅杰部署错免密组内的节点）
	多节点连接性检测（怕节点硬件损毁）
	始末节点文件夹检测和自动修复（怕梅杰传参手滑）
	脚本基于时间进行需传输文件锁定，用户传入模糊时间格式，脚本自动解析并在后续锁定需传输文件时自动比对（时间基本单元，为梅杰每次需要新脚本时此信息要求都不同而生）
	考虑到不同平台不同项目的同步或备份需求既可能有文件夹也可能有文件，所以有选项要求用户每次可以指定传输文件夹还是文件（文件类型基本单元，为梅杰每次需要新脚本时此信息要求都不同而生）
	用户可以指定最长历史天数搜索并执行以下检索功能（怕节点损毁维护人员没即时发现导致损毁当日文件没来得及同步或备份，只查询距离当日指定最长天数内的最新日期，查不到会报错退出）
	同步时始末节点文件夹和文件查缺补漏（后者为梅杰要求，前者是考虑到上一个功能的情况）
	同步时始末节点任意层级文件夹内都存在的文件比对 sha256 值，存在冲突则不传输（梅杰说java轮询麻烦且无法保证传输完整，我查了下海南节点系统内的校验工具，决定使用老美 FBI 同款校验功能，求稳）
	始末节点文件冲突情况写入单独的报错警告日志方便开发查看（梅杰说未来可以做java业务平台设计专门的页面调用报错日志和正常日志的显示功能）
	备份时是直接传输（梅杰要求简单点，任何同步或备份后校验遇到不同再重传等钻牛角尖功能均不让做，scp对于重复传输的内容是直接覆盖）
	全部操作均会记录到每日一个完整日志中，每日有出现传输检测故障或文件冲突等问题都将写入当日日志中（梅杰担心有冲突情况，所以做了这个功能，不同于完整操作记录日志，脚本工作正常当日就不会生成该文件）
	脚本自带过期日志清理功能，默认指定的是10天为有效期（梅杰觉得可以）
	需要同步和备份的节点和节点组有自由部署和卸载功能（为梅杰有时提同步需求有时提备份有时还会换机器部署需求而生，每种操作都有他自己的名字）
	部署测试的清理功能（debug用）
	
脚本遵循徐志摩式风格，安装卸载时都会尽量照顾到机内各种已有功能和维护人员可能进行的各种骚操作，甚至考虑到维护人员可能存在的主动破坏脚本工作环境下的自修复情况，尽量不影响到已有功能的正常工作且不存在卸载后的任何残留
脚本部署时完全不需要指定具体节点的IP，此功能基于我写的定制版免密部署脚本（为防止和机内已有的通用免密冲突已有处理），
目前能用到的内网机器我都看过，免密使用的是最原始功能，为了不影响和防止维护人员操作导致免密临时失效，我的免密方案均使用ssh的高级功能实现完全独立（限制ssh版本必须是2017年大版本更新之后的7.4版本），以避开和现有方案的冲突情况，实在有维护人员想秀操作我也会尽量照顾到，毕竟高级功能的使用方面肯定没有我全面。
部署完成后屏蔽了连接用户名、公密钥信息、IP地址，转而使用节点别名的方式来控制，为后续各种脚本减少了好多选项，组合数量减少了一千多种
不限制脚本必须装在哪台设备上，甚至脚本部署到的节点本身是不存在任何需要备份同步的内容而是直接控制内网其他机器进行各种同步备份操作，
这样可以部署在一台跳板机上，对内网各种机器进行统一指定传输方向和始末节点，凡哥说安夏目前都是双机配置，但脚本设计是面向无限节点数和任意数量硬盘数以适应安夏各种业务平台的通用性。


缺陷：
因为全部检测和传输均使用节点传输方式，所以在每日存在较大文件量的时候运行效率低下（每日一万以上文件数应该会比较明显，现测试文件总数只有500出点头已经有征兆了）：
  1. 为了极致灵活性降低了效率，连脚本所在本机都是以节点的方式进行scp和ssh连接，所以开启会话延时会比较明显
  2. 初版只是实现功能，结构后续还需优化（双机部署使用母鸡下蛋方式固定本机情况、检测和传输逻辑调整等，后者会增加节点损毁时传输失败的文件数量，但节点正常时会缩短多文件的传输时长，这点需领导们自行拿捏，我负责实现）
